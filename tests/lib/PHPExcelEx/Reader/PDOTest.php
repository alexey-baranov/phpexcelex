<?php
namespace PHPExcelEx\Reader;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-11-18 at 12:17:56.
 */
class PDOTest extends \PHPUnit_Framework_TestCase
{
//    const PDO_DSN= "pgsql:host=10.0.14.14 port=5432 dbname=request2";
//    const PDO_USER= "pgsql";
//    const PDO_PASSWORD= "baranov";
    const PDO_DSN= "pgsql:host=217.114.191.86 port=5432 dbname=request3";
    const PDO_USER= "postgres";
    const PDO_PASSWORD= "qwerty123!;";

    /**
     *
     * @var \PDO
     */
    protected $_pdo;
    /**
     *
     * @var \PDOStatement
     */
    protected $_statement;
    
    /**
     * @var PDO
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->_pdo= new \PDO(self::PDO_DSN,self::PDO_USER,self::PDO_PASSWORD);
        $this->_pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);

        $this->_statement= $this->_pdo->query("select id, typee from Node limit 10");
        $this->object = new PDO;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers PHPExcelEx\Reader\PDO::canRead
     * @todo   Implement testCanRead().
     */
    public function testCanRead()
    {
        $this->assertTrue($this->object->canRead($this->_statement));
    }

    /**
     * @covers PHPExcelEx\Reader\PDO::load
     * @todo   Implement testLoad().
     */
    public function testLoad()
    {
        $this->assertInstanceOf('PHPExcel', $this->object->load($this->_statement));
    }
}
